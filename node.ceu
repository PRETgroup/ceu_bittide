code/await NodeProcess (var int num_nodes, var _double freq, event& _double time_event, var int my_id) 
-> (var _double frequency, var int id, event none local_clock_tick, var _double next_clock_tick_time, pool[100] Buffer localBuffers) -> NEVER do      // defines the "Anim" code abstraction
    
    var int num_buffers_needed = num_nodes-1;
    id = my_id;
    frequency = freq;
    next_clock_tick_time = 1/frequency;

    par/and do
        loop do
            var _double simulation_time = await time_event;
            if (simulation_time >= next_clock_tick_time) then
                next_clock_tick_time = next_clock_tick_time + 1/frequency;
                emit local_clock_tick;
            end
        end
    with
        every local_clock_tick do
            _printf("Clock ticked on node %d\n", id);
            //update frequency with control policy
            //for each buffer connected, send its occupancy
            var&? Buffer buff_it;
            loop buff_it in localBuffers do
                var& Buffer my_buff = &buff_it!;
                var _double percent_occupancy = _get_buffer_occupancy_pcnt(my_buff.buffDataHandle);
            end
        end
    end

    await FOREVER; //really we should not reach this line
end
